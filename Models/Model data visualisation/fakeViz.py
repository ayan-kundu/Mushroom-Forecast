# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1HQ-bOsgpwXS1Rw8kWpavEvc3cXm-UPc6
"""

import numpy as np
import pandas as pd
from matplotlib import pyplot as plt
from scipy import stats as stat
import math


#import data 
file_path="C:/Users/Staff/Documents/Agaricus/Mushroom Forecast/Models/Model data visualisation/Fake data/Fake_data.xlsx"
df = pd.read_excel(file_path)
print(df[0:5])  # print first 5 rows of the dataframe

# import data scanned over growth on hourly basis 
sizes=['@20mm','@21mm','@22mm','@23mm','@24mm','@25mm']
# data for y axis
# growth every hours
mm20=list(df.iloc[1,2:-1])
mm21=list(df.iloc[2,2:-1])
mm22=list(df.iloc[3,2:-1])
mm23=list(df.iloc[4,2:-1])
mm24=list(df.iloc[5,2:-1])
mm25=list(df.iloc[6,2:-1])


#%%% Variation in growth over time-12 hrs %%%
# labels for x-asix
x_label = np.linspace(7,20, num=13)
# Plotting x-axis and y-axis
plt.plot(x_label,mm20)
plt.plot(x_label,mm21)
plt.plot(x_label,mm22)
plt.plot(x_label,mm23)
plt.plot(x_label,mm24)
plt.plot(x_label,mm25)

# naming of x-axis and y-axis
plt.xlabel("Clock Time")
plt.ylabel("Size(mm)")
# naming the title of the plot
plt.title("Size growth curve with time")
# setting x-axis values
#plt.xticks(x_label, labels)#overwrite x_labels with labels
plt.legend(sizes)
plt.show()

# import data scanned over counts of different ranges every 3 hours ###
Sizes=['20-25','25-30','30-35','35-40','40-45','45-50','50-55','55-60','60-65','65+']
counts_7am=list(df.iloc[26,2:12])
counts_10am=list(df.iloc[27,2:12])
counts_1pm=list(df.iloc[28,2:12])
counts_4pm=list(df.iloc[29,2:12])
counts_7pm=list(df.iloc[30,2:12])

#%%% Variation of counts over time every 3 hours %%%
print("Plot over counts at specific times")
plt.figure(figsize =(30,5))
plt.subplot(1,5,1)
# naming of x-axis and y-axis
plt.xlabel("Size range")
plt.ylabel("Counts")
# naming the title of the plot
plt.title("Counts wrt size ranges @7am")
plt.bar(Sizes,counts_7am)
plt.plot(Sizes,counts_7am)
plt.subplot(1,5,2)
plt.title("Counts wrt size ranges @10am")
plt.bar(Sizes,counts_10am)
plt.plot(Sizes,counts_10am)
plt.subplot(1,5,3)
plt.title("Counts wrt size ranges @1pm")
plt.bar(Sizes,counts_1pm)
plt.plot(Sizes,counts_1pm)
plt.subplot(1,5,4)
plt.title("Counts wrt size ranges @4pm")
plt.bar(Sizes,counts_4pm)
#plt.plot(Sizes,counts_1pm)
plt.subplot(1,5,5)
plt.xlabel("Size range")
plt.title("Counts wrt size ranges @7pm")
plt.bar(Sizes,counts_7pm)
#plt.plot(Sizes,counts_1pm)
plt.show()

################################################################
# Data over kg/m2 yield to visualise population over flushes ###
F1_kg_m2=[16.3,16.5,15.6,16.0,14.2,13.8,14.1]
F2_kg_m2=[7.9,7.1,8.8,7.3,9.2,8.4,8.7,9.1,8.2]
F3_kg_m2=[6.6,3.1,6.7,3.3,3.6]
# getting mean values
F1_kg_m2_des=stat.describe(F1_kg_m2)
F2_kg_m2_des=stat.describe(F2_kg_m2)
F3_kg_m2_des=stat.describe(F3_kg_m2)
mean_F1_kg_m2=F1_kg_m2_des.mean
mean_F2_kg_m2=F2_kg_m2_des.mean
mean_F3_kg_m2=F3_kg_m2_des.mean

#%%% flactuation/ variance in each flush %%%
plt.figure(figsize =(5,5))
#plt.subplot(3,1,1)
plt.plot(F1_kg_m2,'o')
plt.title("KGs/m2 Per Flush")
plt.xlabel("Tunnels")
plt.ylabel("KGs/m2")
#plt.legend(['Flush 1'])

#plt.subplot(3,1,2)
plt.plot(F2_kg_m2,'o')
plt.xlabel("Tunnels")
plt.ylabel("KGs/m2")
#plt.legend(['Flush 2'])

#plt.subplot(3,1,3)
plt.plot(F3_kg_m2,'o')
plt.xlabel("Tunnels")
plt.ylabel("KGs/m2")
plt.legend(['Flush 1','Flush 2','Flush 3'])

plt.plot(round(mean_F1_kg_m2,2),'x')
plt.plot(round(mean_F2_kg_m2,2),'x')
plt.plot(round(mean_F3_kg_m2,2),'x')
plt.show()

#%%% Box plot to visualise per flush mushroom population variation %%%
plt.figure(figsize =(9,6))
plt.subplot(1,3,1)
plt.boxplot(F1_kg_m2)
#plt.plot(F1_kg_m2_des.mean)
plt.xlabel("Flush 1")
plt.ylabel("KGs/m2")

plt.subplot(1,3,2)
plt.title("KGs/m2 Per Flush")
plt.boxplot(F2_kg_m2)
plt.xlabel("Flush 2")

plt.subplot(1,3,3)
plt.boxplot(F3_kg_m2)
plt.xlabel("Flush 3")
plt.show()